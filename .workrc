#!/bin/bash

#JAVA
export JAVA_HOME=$(/usr/libexec/java_home -v 1.8.0_77)
workrc() {
  echo "
  WORKRC
  --------------

  MAKE
  --------------
    mI ................ Make Inspector
    mTD ................ Make Test-Dev
    mS ................ Make Setup
    cleanBreak ......... DEPRICATED USE CLEANSTART: Runs make shrinkwrap setup test-unit

  TESTIUM
  --------------
    itg ................ Runs testium for one file

  NPM
  --------------
    shrink ............. Runs npm shrinkwrap

  NODE
  --------------
    runDebug ........... Runs node debug for pull
    killDebug .......... Kill hanging node process on port :5858

  UTILITIES
  --------------
    mov2Gif ........... converts .mov to gif takes two params (input, output)
    cleanStart ......... cleans environment for grpn-card-ui and pull
    rebuild ......... rebuilds node module then restarts PULL. PULL must be to
                      the left of node module.

  ALISES
  --------------
    rb ........... rebuild
    grst ........... git reset
    clearTmux ........... clears tmux
    mochalocal........... runs itg
  "
}

# Checks for bash dot files
if [ ! -L "$HOME/Repos/deal/.git/hooks/pre-commit" ]; then
  ln -s ~/scripts/pre-commit ~/Repos/deal/.git/hooks/pre-commit
fi

#Color Highlighting
COL_BLUE="$(tput setaf 6)"
NORMAL=$(tput sgr0)

# NVM install
export NVM_DIR="/users/cmcadams/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" # this loads nvm

# Memcached
ulimit -n 4096

#### ALIAS

alias mochalocal="itg"

# Git
alias grst="git fetch --all && git reset --hard FETCH_HEAD"
alias clearTmux=" clear && tmux clear-history"
alias cleanBreak="echo DEPRICATED: please use cleanStart instead"
alias rb="rebuild"
alias server="make dev"

  # Make
  alias mI="make inspector"
  alias mTD="make test-dev"
  alias mD="make dev"
  alias mS="make setup"
  alias shrink="npm run test-shrinkwrap || make shrinkwrap"

#### FUNCTIONS

function killPort() {
  PORT=$1
  USEDPORT=$(lsof -i :$PORT);

  if [[ -n $USEDPORT ]];
  then
    $(ps aux | grep node | awk "{print $2}" | xargs kill -9 > /dev/null 2>&1 &)
  else
    echo $1
    echo -e "${COL_BLUE} Port ${PORT} not in use";
  fi
}

function runDebug() {
  if type "tmux" > /dev/null; then
    clearTmux
  fi;

  if [ -a core/worker-shim.js ]; then
    node debug core/worker-shim.js
  else
    node debug
  fi
}

function killDebug() {

if [[ $(lsof -i :5858) ]]; then
    killPort 5858
    echo -e "${COL_BLUE}killed node debug${NORMAL}";
  else
    echo -e "${COL_BLUE}node debug is not running${NORMAL}";
fi
}

cleanStart() {
  if [ type "npm" ] > /dev/null && !(type "make"); then
    echo -e "${COL_BLUE}running cleanStart...${NORMAL}";
    rm -rf node_modules && npm install && gulp build server
  elif type "make" > /dev/null; then
    echo -e "${COL_BLUE}running cleanStart...${NORMAL}";
    make clean setup assets test-client
  else
    echo -e "${COL_BLUE}not in /grpn-* or a Skelator app${NORMAL}";
  fi
}

itg () {
  FILE=$1
  testium_launch=false PORT=3070 mocha $FILE
}

function rebuild () {
  gulp build
  killPort 3070
  tmux send-keys -t left "make dev" C-m
}
