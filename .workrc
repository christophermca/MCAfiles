#!/bin/sh

#JAVA
export JAVA_HOME=$(/usr/libexec/java_home)
workrc() {
  echo "
  WORKRC
  --------------

  GIT
  --------------
    grst ............... Git ReSeTs git branch with upstream/master
    gup  ............... Git UPdate

  MAKE
  --------------
    mI  ................ Make Inspector
    mTD ................ Make Test-Dev
    mS  ................ Make Setup
    cleanBreak ......... DEPRICATED USE CLEANSTART: Runs make shrinkwrap setup test-unit

  TESTIUM
  --------------
    itg  ................ Runs testium for one file

  NPM
  --------------
    shrink ............. Runs npm shrinkwrap

  GRPN-CARD-UI
  --------------
    cleanStart ......... cleans enviroment

  PULL
  --------------
    cleanStart ......... cleans enviroment

  NODE
  --------------
    runDebug ........... Runs node debug for pull
    killDebug .......... Kill hanging node process on port :5858

  Utilities
  --------------
  mov2Gif ........... convets .mov to gif takes two params (input, output)


  ";
}
# NVM install
export NVM_DIR="/users/cmcadams/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # this loads nvm

# Memcached
ulimit -n 4096

#### ALIAS
alias grst="git fetch --all && git reset --hard upstream/master"
alias clearTmux=" clear && tmux clear-history"
alias runDebug="clearTmux && node debug core/worker-shim.js"
alias cleanBreak="echo DEPRICATED: please use cleanStart instead"

  # Make
  alias mI="make inspector"
  alias mTD="make test-dev"
  alias mD="make dev"
  alias mS="make setup"
  alias shrink="npm run test-shrinkwrap || make shrinkwrap"

#### FUNCTIONS

function gup() {
  git stash save -a 'stashed during gup' 
  git co master
  git fetch --all
  git reset --hard upstream/master
  git push
  git co -
  git rebase master
  echo 'be sure to check stash'
}

function killPort() {
  USEDPORT=$(lsof -i $1);

  if [[ -n $USEDPORT ]];
  then
    echo 'killing port $1';
    $(ps aux | grep node | awk '{print $2}' | xargs kill -9 > /dev/null 2>&1 &)
    echo 'port $1 killed';
  fi
}

function killDebug() {
  if [[ -n $(lsof -i :5858) ]];
  then
    killPort :5858
    COL_BLUE="\x1b[34;01m"
    echo -e $COL_BLUE'killed node debug';
  else
    COL_BLUE="\x1b[34;01m"
    echo -e $COL_BLUE'node debug is not running.';
  fi
}

cleanStart() {
  if [[ "$PWD" = */grpn-card-ui ]];
  then
    rm -rf node_modules && npm install && gulp build server
  elif [[ "$PWD" = */pull ]];
  then
    make clean setup test-unit && make dev
  else
    COL_BLUE="\x1b[34;01m"
    echo -e $COL_BLUE'not in /grpn-card-ui or /pull';
  fi
}

mov2Gif () {
  INPUT=$1
  OUTPUT=$2
  ffmpeg -i $INPUT -s 600x400 -pix_fmt rgb24 -r 10 -f gif - | gifsicle --optimize=3 --delay=3 > $OUTPUT
}

itg () {
  FILE=$1
  testium_launch=false PORT=3070 mocha $FILE
}

#alias for consistancy with ION
alias mochalocal="itg"


function rebuild () {
  gulp build && killPort :3070
  tmux send-keys "make dev" ; send-keys Enter
  tmux select-pane -R
}


