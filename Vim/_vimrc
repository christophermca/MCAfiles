set nocompatible
source $VIMRUNTIME/vimrc_example.vim
source $VIMRUNTIME/mswin.vim
behave mswin


"============================================================================
"MCA settings
"============================================================================

" INSTALL PATHOGEN
execute pathogen#infect()

" SET COLORS
colorscheme grb256
set background=dark

" GENERAL 
set ff=unix
scriptencoding utf-8
syntax enable " enable syntax processing
set vb " set error flashing
set noerrorbells " no beeping
cd c:/localdev/ " home diretory
set shortmess+=I

" SPACES & TABS
set tabstop=4 " number of visual spaces per tab
set shiftwidth=4
set softtabstop=4   " number of spaces in tab when editing
set expandtab " tabs are spaces

"=======================
"UI CONFIG
"=======================
    "gui options
    set go-=T " toolbar
    set go+=m " menu 
    set go-=l " hide left scroll bar
    set go-=L " hide left scroll bar in split
    set go-=R " hide right scroll bar
    set go-=r " hide right scroll bar in split
    set guifont=Lucida_Console:h10:cDEFAULT
    " WINDOW options
    set lines=50 columns=120 " window initSize

    " STATUS bar
    if has('statusline')
        set laststatus=2
        " Broken down into easily includeable segments
            set statusline=%<%f\                     " Filename
            set statusline+=%w%h%m%r                 " Options
            set statusline+=\ [%{&ff}/%Y]            " Filetype
            set statusline+=\ [%{getcwd()}]          " Current dir
            set statusline+=%=%-14.(%l,%c%V%)\ %p%%  " Right aligned file nav info
    endif
    set showcmd " show command line in bottom bar
    
    " RULER options
    set noruler " Show the ruler
   

    set colorcolumn=120
    "* To tone down the coloring 
    highlight ColorColumn guibg=Gray14
    
    "LINE numbers
    set number " show line numbers
    set nuw=5 " number width to 6 makes things look a little neater
    set shortmess+=I
    set cursorline  
    highlight CursorLine guibg=gray17   

    filetype indent on "load filetype-specific indent files
    set wildmenu  " visual autocomplete for command menu
    set lazyredraw " redraw only when we need to
    " set showmatch " highlight matching [{()}]
    set nobackup " doesn't make a backup of opened file
    set nowritebackup " doesn't write a backup
    set noswapfile 
    set viewoptions=folds,options,cursor,unix,slash " Better Unix / Windows compatibility
    set virtualedit=onemore " Allow for cursor beyond last character
    set history=1000 " Store a ton of history (default is 20)

    "set spell " Spell checking on
    
    set hidden " Allow buffer switching without saving
    set confirm " confirm if you want to save
    set tabpagemax=15 " Only show 15 tabs
    set showmode " Display the current mode
    set linespace=0 " No extra spaces between rows
    set nowrap " Do not wrap long lines
    set scrolloff=3 " Minimum lines to keep above and below cursor
    " workaround for gvim screen redraw issues
    set ttyscroll=0

"=======================
" MOUSE
"=======================
set mouse=a " Automatically enable mouse usage
set mousehide  " Hide the mouse cursor while typing

"=======================
" KEYBOARD
"=======================
set backspace=indent,eol,start
" TABS
map  tn :tabn<CR> " next tab
map  tp :tabp<CR> "previous tab
map  <C-n><C-t> :tabnew<CR> "new tab
map  <C-n><C-w> :enew<CR> "new window

"=================
" SPLIT CONTROLS
"=================
nmap <C-h> <C-w>h
nmap <C-l> <C-w>l
nmap <C-k> <C-w>k
nmap <C-j> <C-w>j


"===============
"
" SEARCHING
"===============
set incsearch " search as characters are entered
set hlsearch " highlight matches

" turn off search highlight
nnoremap <leader><space> :nohlsearch<CR>

" FOLDING
set foldenable " enable folding
set foldlevelstart=10 " open mast folds by default
set foldnestmax=10 " 10 nested fold max
set foldmethod=indent " fold based on indent level


" NERD TREE
"autocmd vimenter * NERDTree
"autocmd StdinReadPre * let s:std_in=1
"autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif
nnoremap <F5> :NERDTreeToggle<CR>



